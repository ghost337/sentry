version: '3.4'

x-restart-policy: &restart_policy
  restart: unless-stopped
x-defaults: &defaults
  <<: *restart_policy
  build:
    context: .
  depends_on:
    - smtp
  environment:
    SENTRY_SECRET_KEY: ${SENTRY_SECRET_KEY}
    SENTRY_MEMCACHED_HOST: ${SENTRY_MEMCACHED_HOST}
    SENTRY_REDIS_HOST: ${SENTRY_REDIS_HOST}
    SENTRY_POSTGRES_HOST: ${SENTRY_POSTGRES_HOST}
    SENTRY_DB_NAME: ${SENTRY_DB_NAME}
    SENTRY_DB_USER: ${SENTRY_DB_USER}
    SENTRY_DB_PASSWORD: ${SENTRY_DB_PASSWORD}
    SENTRY_URL_PREFIX: ${SENTRY_URL_PREFIX}
    SENTRY_USE_SSL: ${SENTRY_USE_SSL}
    SENTRY_EMAIL_HOST: ${SENTRY_EMAIL_HOST}
  volumes:
    - sentry-data:/var/lib/sentry/files


services:
  smtp:
    <<: *restart_policy
    image: tianon/exim4
    networks:
      - back

  web:
    <<: *defaults
    image: $IMAGE_WEB_NAME:$CIRCLE_SHA1
    ports:
      - '80:9000/tcp'
    networks:
      - front
      - back

  cron:
    <<: *defaults
    image: $IMAGE_CRON_NAME:$CIRCLE_SHA1
    command: run cron
    networks:
      - back

  worker:
    <<: *defaults
    image: $IMAGE_WORKER_NAME:$CIRCLE_SHA1
    command: run worker
    networks:
      - back

#  nginx:
#    <<: *restart_policy
#    image: $IMAGE_NGINX_NAME:$CIRCLE_SHA1
#    build:
#      context: .
#      dockerfile: Dockerfile.nginx
#    ports:
#      - '80:80/tcp'
#      - '443:443/tcp'
#    volumes:
#      - type: bind
#        read_only: true
#        source: ./nginx/ssl
#        target: /etc/nginx/ssl
#    depends_on:
#      - web
#    networks:
#      - front

volumes:
    sentry-data:
      external: true

networks:
  front:
    driver: bridge
  back:
    driver: bridge
